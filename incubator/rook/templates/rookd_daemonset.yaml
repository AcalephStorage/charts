apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: rookd
  labels:
    app: rook
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: rook
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      containers:
      - name: rookd
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: true
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
        - name: ROOKD_DISCOVERY_URL
          valueFrom:
            configMapKeyRef:
              name: rookd-discovery
              key: discovery-token
        - name: ROOKD_PRIVATE_IPV4
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ROOKD_PUBLIC_IPV4
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ROOKD_DATA_DEVICES
          value: {{ .Values.dataDevices }}
        volumeMounts:
        - mountPath: /var/lib/rook
          name: rook-data-dir
        - mountPath: /dev
          name: dev
        resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: rook-data-dir
        emptyDir: {}
      - name: dev
        hostPath:
          path: /dev
