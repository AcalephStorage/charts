kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: heketi
  labels:
    glusterfs: heketi-deployment
  annotations:
    description: Defines how to deploy Heketi
spec:
  replicas: 1
  template:
    metadata:
      name: heketi
      labels:
        name: heketi
        glusterfs: heketi-pod
    spec:
      serviceAccountName: heketi-service-account
      containers:
        - image: '{{ .Values.heketi.repository }}:{{ .Values.heketi.tag }}'
          imagePullPolicy: {{ .Values.heketi.pullPolicy }}
          name: heketi
          env:
            - name: HEKETI_EXECUTOR
              value: kubernetes
            - name: HEKETI_KUBE_USE_SECRET
              value: 'y'
            - name: HEKETI_KUBE_TOKENFILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: HEKETI_KUBE_NAMESPACEFILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/namespace
            - name: HEKETI_FSTAB
              value: /var/lib/heketi/fstab
            - name: HEKETI_SNAPSHOT_LIMIT
              value: '14'
            - name: HEKETI_KUBE_INSECURE
              value: 'y'
            - name: HEKETI_KUBE_APIHOST
              value: 'https://kubernetes.default:443/'
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: db
              mountPath: /var/lib/heketi
            - name: heketi-topology
              mountPath: /etc/heketi-topology
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: /hello
              port: 8080
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: /hello
              port: 8080
      volumes:
        - name: db
          # glusterfs:
          #   endpoints: heketi-storage-endpoints
          #   path: heketidbstorage
          emptyDir: {}
        - name: heketi-topology
          configMap:
            name: heketi-topology
